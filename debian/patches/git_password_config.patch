Description: Allow key password to be set in config
 Sometimes we want to just provision it with nmcli and not have to bother
 the user with it.
Author: David Woodhouse <dwmw2@infradead.org>
Origin: upstream, https://gitlab.gnome.org/GNOME/NetworkManager-openconnect/commit/97b640caf7a5382e413ed6af48a64d86f4b093bd
Last-Update: 2018-10-13
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/auth-dialog/main.c
+++ b/auth-dialog/main.c
@@ -964,6 +964,9 @@
 	char *sslkey, *cert;
 	char *csd_wrapper;
 	char *reported_os;
+#if OPENCONNECT_CHECK_VER(5,5)
+	char *key_pass;
+#endif
 	char *pem_passphrase_fsid;
 	char *cafile;
 	char *token_mode;
@@ -1046,6 +1049,12 @@
 	sslkey = g_hash_table_lookup (options, NM_OPENCONNECT_KEY_PRIVKEY);
 	openconnect_set_client_cert (vpninfo, OC3DUP (cert), OC3DUP (sslkey));
 
+#if OPENCONNECT_CHECK_VER(5,5)
+	key_pass = g_hash_table_lookup (options,
+					      NM_OPENCONNECT_KEY_KEY_PASS);
+	if (key_pass)
+		openconnect_set_key_password(vpninfo, key_pass);
+#endif
 	pem_passphrase_fsid = g_hash_table_lookup (options,
 						   NM_OPENCONNECT_KEY_PEM_PASSPHRASE_FSID);
 	if (pem_passphrase_fsid && cert && !strcmp(pem_passphrase_fsid, "yes"))
--- a/shared/nm-service-defines.h
+++ b/shared/nm-service-defines.h
@@ -38,6 +38,7 @@
 #define NM_OPENCONNECT_KEY_USERCERT "usercert"
 #define NM_OPENCONNECT_KEY_CACERT "cacert"
 #define NM_OPENCONNECT_KEY_PRIVKEY "userkey"
+#define NM_OPENCONNECT_KEY_KEY_PASS "key_pass"
 #define NM_OPENCONNECT_KEY_MTU "mtu"
 #define NM_OPENCONNECT_KEY_PEM_PASSPHRASE_FSID "pem_passphrase_fsid"
 #define NM_OPENCONNECT_KEY_PROTOCOL "protocol"
--- a/src/nm-openconnect-service.c
+++ b/src/nm-openconnect-service.c
@@ -84,6 +84,7 @@
 	{ NM_OPENCONNECT_KEY_AUTHTYPE,    G_TYPE_STRING, 0, 0 },
 	{ NM_OPENCONNECT_KEY_USERCERT,    G_TYPE_STRING, 0, 0 },
 	{ NM_OPENCONNECT_KEY_PRIVKEY,     G_TYPE_STRING, 0, 0 },
+	{ NM_OPENCONNECT_KEY_KEY_PASS,    G_TYPE_STRING, 0, 0 },
 	{ NM_OPENCONNECT_KEY_MTU,         G_TYPE_STRING, 0, 0 },
 	{ NM_OPENCONNECT_KEY_PEM_PASSPHRASE_FSID, G_TYPE_BOOLEAN, 0, 0 },
 	{ NM_OPENCONNECT_KEY_PROTOCOL,    G_TYPE_STRING, 0, 0 },
